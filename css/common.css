@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
  color: #1F286F;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

html {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  font-weight: normal;
  text-align: left;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}

q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary {
  display: block;
}

.clearfix:after {
  display: block;
  visibility: hidden;
  height: 0;
  clear: both;
  content: ".";
}

.clearfix {
  min-height: 1px;
}

a {
  color: #1F286F;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.txt_ct {
  text-align: center;
}

html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: "Josefin Sans", -apple-system, 'Spinnaker', BlinkMacSystemFont, "Noto Sans JP", "Meiryo UI", メイリオ, sans-serif;
  font-size: 100%;
}

body {
  position: relative;
  overflow-x: hidden;
}

body.modal-open {
  position: fixed;
  left: 0;
  width: 100%;
  height: 100%;
}

p {
  line-height: 1.4;
}

header {
  display: flex;
  z-index: 10;
  position: fixed;
  top: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 120px;
  padding: 0 80px;
}

header.scrolled {
  height: 90px;
  border-bottom: solid 1px #1F286F;
  background-color: #fff;
}

header a.logo {
  display: inline-block;
  font-size: 1.6rem;
  line-height: 1.2;
  cursor: pointer;
}

header a.logo span {
  display: block;
  font-size: 1rem;
  text-align: center;
}

header a.logo:hover {
  text-decoration: none;
}

header nav {
  margin-left: auto;
}

header nav ul {
  display: flex;
}

header nav ul li {
  margin-left: 2rem;
}

header #menu_btn {
  display: none;
}

.background {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

main {
  padding-top: 120px;
}

main #key_visual {
  z-index: 1;
  position: relative;
  width: 100vw;
  height: 100vh;
}

main #key_visual .message {
  position: absolute;
  bottom: 20vh;
  padding: 0 80px;
}

main #key_visual .message h1 {
  color: #E60012;
  font-size: 3.8rem;
}

main #key_visual .message p {
  margin-top: 10px;
  font-size: 1.2rem;
}

main .inner {
  width: 80%;
  max-width: 960px;
  margin: 60px auto;
}

main .inner .explanation {
  text-align: center;
}

main .heading {
  font-size: 3rem;
  text-align: center;
}

main #site {
  padding: 60px 0;
}

main #site ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 100%;
  margin-top: 30px;
}

main #site ul li {
  display: block;
  width: 48%;
  height: auto;
}

main #site ul li.bdr {
  border: solid 1px #ccc;
}

main #site ul li:nth-child(n+3) {
  margin-top: 30px;
}

main #site ul li a {
  display: block;
  position: relative;
  width: 100%;
  overflow: hidden;
  background-color: cadetblue;
}

main #site ul li a::before {
  z-index: 2;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 1.2rem;
  content: '→ View Detail';
  opacity: 0;
  transition: all 0.7s;
}

main #site ul li a:hover::before {
  opacity: 1;
}

main #site ul li a::after {
  display: block;
  z-index: 1;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  content: "";
  opacity: 0;
  transition: all 0.7s;
}

main #site ul li a:hover::after {
  opacity: 1;
}

main #site ul li a img {
  width: 100%;
  vertical-align: bottom;
}

main #design {
  width: 100vw;
  padding: 60px 0;
}

main #design ul {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: space-around;
  margin: 20px auto;
}

main #design ul li {
  width: 21%;
}

main #design ul li a {
  display: block;
  position: relative;
  width: 100%;
}

main #design ul li a::before {
  display: inline-block;
  z-index: 10;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 90%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 1.2rem;
  text-align: center;
  content: '→ View Detail';
  opacity: 0;
  transition: all 0.7s;
}

main #design ul li a:hover::before {
  opacity: 1;
}

main #design ul li a .img_wrap {
  position: relative;
  margin-top: 40px;
  padding-top: 100%;
  overflow: hidden;
  border: solid 1px #ccc;
  border-radius: 50%;
  background-color: #000;
}

main #design ul li a .img_wrap img {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  transform: translate(-40%, -50%) scale(1.2);
  transition: .5s;
}

main #design ul li a .img_wrap img.bluelabel {
  transform: translate(-80%, -25%) scale(1.8);
}

main #design ul li a .img_wrap img.blacklabel {
  transform: translate(-80%, -45%) scale(1.6);
}

main #design ul li a .img_wrap img.tartare {
  transform: translate(-25%, -50%) scale(1.6);
}

main #design ul li a .img_wrap img.tokyo-ec {
  transform: translate(-25%, -35%) scale(1.6);
}

main #design ul li a .img_wrap img.reform-contact {
  transform: translate(-25%, -65%) scale(2);
}

main #design ul li a .img_wrap img.sanyo {
  transform: translate(-52%, -50%) scale(1.2);
}

main #design ul li a .img_wrap img.amn {
  top: 50%;
  left: 80%;
  -o-object-fit: contain;
     object-fit: contain;
  transform: translate(-152%, -40%) scale(3);
}

main #design ul li a:hover .img_wrap img {
  opacity: 0.2;
}

main #qualification {
  width: 100vw;
  padding: 60px 0;
  background-color: #fff;
}

main #qualification .box ul {
  display: flex;
  flex-direction: column;
  width: 70%;
  margin: 0 auto;
}

main #qualification .box ul li {
  margin-top: 1rem;
  padding-top: 1.5rem;
  border-top: dotted 1px #1F286F;
  font-size: 1.4rem;
  line-height: 1.6;
}

main #qualification .box ul li:first-child {
  margin-top: 0;
  padding-top: 0;
  border-top: none;
}

main #qualification .box ul li time {
  margin-right: 1rem;
  margin-bottom: 10px;
  font-size: 1.4rem;
}

main #qualification .box ul li time span {
  display: inline-block;
  padding: 5px 10px;
  background-color: #1F286F;
  color: #fff;
}

.modal {
  display: none;
  z-index: 2000;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
}

.modal .inner {
  z-index: 2200;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80%;
  height: 85vh;
  padding: 30px;
  overflow-y: scroll;
  transform: translate(-50%, -50%);
  background-color: #fff;
}

.modal .inner > img {
  display: block;
  width: 100%;
  margin-top: 20px;
}

.modal .inner > img.main_bnr {
  width: 70%;
  margin: 0 auto;
  border: solid 1px #d8093c;
}

.modal .inner > img.w65per {
  width: 65%;
  margin-right: auto;
  margin-left: auto;
  text-align: center;
}

.modal .inner > ul {
  width: 85%;
  margin: 20px auto 30px;
}

.modal .inner > ul li ul {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  margin-top: 20px;
}

.modal .inner > ul li ul li img {
  display: block;
  width: 100%;
}

.modal .inner > ul li ul li:first-child {
  width: 60%;
}

.modal .inner > ul li ul li:last-child {
  width: 28%;
}

.modal .inner a.modalClose {
  display: block;
  position: absolute;
  top: -17px;
  right: -17px;
  width: 2.2rem;
  height: 2.2rem;
  border-radius: 50%;
  background-color: #fff;
  font-family: 'Font Awesome 5 Free';
  font-size: 1.1rem;
  font-weight: 900;
  line-height: 2.2rem;
  text-align: center;
}

.modal .inner a:hover.modalClose {
  background-color: #E73656;
  color: #fff;
}

.overlay {
  z-index: 2100;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background: rgba(0, 0, 0, 0.8);
}

@media only screen and (max-width: 991px) {
  html, body, div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed,
  figure, figcaption, footer, header, hgroup,
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
    font-size: 16px;
  }
  main #design ul li {
    width: 30%;
  }
}

@media only screen and (max-width: 575px) {
  html, body, div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed,
  figure, figcaption, footer, header, hgroup,
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
    font-size: 15px;
  }
}

@media only screen and (max-width: 767px) {
  header {
    height: 60px;
    padding: 0 20px;
    border-bottom: solid 1px #1F286F;
    background-color: #fff;
  }
  header.scrolled {
    height: 60px;
  }
  header a.logo {
    flex-grow: 1;
  }
  header a.logo span {
    text-align: left;
  }
  header nav {
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    transform: translate(250px);
    background-color: #1F286F;
    transition: all .5s;
  }
  header nav.open {
    right: 0;
    transform: translateZ(0);
  }
  header nav ul {
    flex-direction: column;
    margin-top: 60px;
    padding: 20px 0;
  }
  header nav ul li {
    margin-left: 0;
    padding: 20px 0;
    text-align: center;
  }
  header nav ul li a {
    color: #fff;
  }
  header #menu_btn {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    width: 60px;
    height: 60px;
    cursor: pointer;
  }
  header #menu_btn .menu_btn_box {
    display: block;
    position: relative;
    width: 26px;
    height: 20px;
    margin: 20px 17px;
  }
  header #menu_btn .menu_btn_box span {
    position: absolute;
    left: 0;
    width: 100%;
    height: 2px;
    margin: 0 auto;
    background-color: #1F286F;
  }
  header #menu_btn .menu_btn_box span:nth-of-type(2) {
    top: 8px;
  }
  header #menu_btn .menu_btn_box span:last-of-type {
    top: 16px;
  }
  header #menu_btn.active .menu_btn_box span {
    background-color: #fff;
  }
  header #menu_btn.active .menu_btn_box span:nth-of-type(1) {
    transform: translateY(8px) rotate(-45deg);
  }
  header #menu_btn.active .menu_btn_box span:nth-of-type(2) {
    opacity: 0;
  }
  header #menu_btn.active .menu_btn_box span:nth-of-type(3) {
    transform: translateY(-8px) rotate(45deg);
  }
  main #key_visual .message {
    padding: 0 20px;
  }
  main #key_visual .message h1 {
    font-size: 2.4rem;
  }
  main #site {
    padding: 0;
  }
  main #site ul li {
    width: 100%;
  }
  main #site ul li:nth-child(n+2) {
    margin-top: 10px;
  }
  main #design {
    padding: 30px 0;
  }
  main #design ul {
    justify-content: space-between;
  }
  main #design ul li {
    width: 47%;
  }
  main #qualification {
    padding: 30px 0;
  }
}

@media only screen and (max-width: 1199px) {
  main .inner .explanation {
    text-align: left;
  }
  main #qualification .box ul {
    width: 100%;
  }
  main #qualification .box ul li time {
    display: block;
  }
  .modal .inner {
    width: 85%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
